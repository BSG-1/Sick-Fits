{"version":3,"file":"static/webpack/static/development/pages/sell.js.2493948128503c437a91.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\n//allows us to push data and actually make a change\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\n\n//writing the query for the mutation that captures the data and sends it to server\nconst CREATE_ITEM_MUTATION = gql`\n\n`;\n\n\nclass CreateItem extends Component {\n    state = {\n        title: 'Cool Shoes',\n        description: 'I love those',\n        image: 'dog.jpg',\n        largeImage: 'largeDog.jpg',\n        price: 1000,\n    };\n\n    //wouldnt be able to bind a regular function\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        //works for ANY input\n        this.setState({ [name]: val });\n    }\n\n    render() {\n        return (\n            <Form onSubmit={(e) => {\n                //stops form from actually submitting; will stop url weirdness\n                e.preventDefault();\n                console.log(this.state);\n            }}\n            >\n                <fieldset>\n                    <label htmlFor=\"title\">\n                        Title\n                        <input\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            required\n                            value={this.state.title}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n\n                    <label htmlFor=\"price\">\n                        Price\n                        <input\n                            type=\"number\"\n                            id=\"price\"\n                            name=\"price\"\n                            placeholder=\"Price\"\n                            required\n                            value={this.state.price}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n\n                    <label htmlFor=\"description\">\n                        Description\n                        <textarea\n                            id=\"description\"\n                            name=\"description\"\n                            placeholder=\"Enter A Description\"\n                            required\n                            value={this.state.description}\n                            onChange={this.handleChange}\n                        />\n                    </label>\n                    <button type=\"submit\">Submit</button>\n                </fieldset>\n            </Form>\n        );\n    }\n}\n\nexport default CreateItem;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAnEA;AACA;AAqEA;;;;A","sourceRoot":""}