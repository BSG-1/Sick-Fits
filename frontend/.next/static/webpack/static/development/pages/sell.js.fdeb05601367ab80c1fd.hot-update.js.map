{"version":3,"file":"static/webpack/static/development/pages/sell.js.fdeb05601367ab80c1fd.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from 'react';\n//allows us to push data and actually make a change\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport formatMoney from '../lib/formatMoney';\nimport Error from './ErrorMessage';\n\n//writing the query for the mutation that captures the data and sends it to server\nconst CREATE_ITEM_MUTATION = gql`\n    # this mutation takes arguments, which will then be able to gather the input data and hold it in the query (createItem), which was specified from our backend in schema.graphql\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String\n        $largeImage: String\n    ) {\n        createItem(\n            title: $title\n            description: $description\n            price: $price\n            image: $image\n            largeImage: $largeImage\n        ) {\n            id\n        }\n    } \n`;\n\nclass CreateItem extends Component {\n    state = {\n        title: 'Cool Shoes',\n        description: 'I love those',\n        image: 'dog.jpg',\n        largeImage: 'largeDog.jpg',\n        price: 1000,\n    };\n\n    //wouldnt be able to bind a regular function\n    handleChange = e => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        //works for ANY input\n        this.setState({ [name]: val });\n    }\n\n    render() {\n        return (\n            // Mutation wraps the entire form tag, exposing data to the query\n            <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n                {(createItem, { loading, error }) => (\n                    //want to return everything from form implicitly (returns whatever is there without having to use the return keyword ==== closing for function and mutation tag moved to end of form!!!)                     \n                    <Form onSubmit={(e) => {\n                        //stops form from actually submitting; will stop url weirdness\n                        e.preventDefault();\n                        console.log(this.state);\n                    }}\n                    >\n                        <Error error={error} />\n                        <fieldset disabled={loading} aria-busy={true}>\n                            <label htmlFor=\"title\">\n                                Title\n                        <input\n                                    type=\"text\"\n                                    id=\"title\"\n                                    name=\"title\"\n                                    placeholder=\"Title\"\n                                    required\n                                    value={this.state.title}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"price\">\n                                Price\n                        <input\n                                    type=\"number\"\n                                    id=\"price\"\n                                    name=\"price\"\n                                    placeholder=\"Price\"\n                                    required\n                                    value={this.state.price}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n\n                            <label htmlFor=\"description\">\n                                Description\n                        <textarea\n                                    id=\"description\"\n                                    name=\"description\"\n                                    placeholder=\"Enter A Description\"\n                                    required\n                                    value={this.state.description}\n                                    onChange={this.handleChange}\n                                />\n                            </label>\n                            <button type=\"submit\">Submit</button>\n                        </fieldset>\n                    </Form>\n                )}\n            </Mutation>\n        );\n    }\n}\n\nexport default CreateItem;\n//named export using ES6\nexport { CREATE_ITEM_MUTATION };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAoBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/CA;AAAA;AAHA;AAwDA;;;;AA1EA;AACA;AA4EA;AACA;;;;;A","sourceRoot":""}